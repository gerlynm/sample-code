name: Deploy Application on kubernetes
on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: secrets.ECR_URL

permissions:
  id-token: write
  contents: read  

jobs:
  scan:
    runs-on: ubuntu-latest
    steps:
    - name: checkout source code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: sonarqube scan
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        args: "-Dsonar.organization=jerrii  -Dsonar.projectKey=jerrii_jerrii   \n"
  build:
    needs: scan
    runs-on: ubuntu-latest
    steps:
    - name: checkout source code
      uses: actions/checkout@v4

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::837824135029:role/githubactions
        aws-region: us-east-1

    - name: Sts GetCallerIdentity
      run: |
        aws sts get-caller-identity

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        SHORT_SHA=`echo "$IMAGE_TAG" | cut -c1-8`
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$SHORT_SHA .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$SHORT_SHA
